; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = debugZeroUSB
; debugZeroUSB zeroUSB

;; You MUST inject these options into [env:] section
;; using ${common_env_data.***} (see below)
;; NB: For FREQUENCY: Channel 0 is 902.3, others are + 200KHz for BW = 125 KHz. 
;; There are 64 channels. 915.0 MHz is the no-channel nominal freq
;; For the NODE_ADDRESS, until a configuration mode/program is made, this must be
;; set as a compile-time constant. Values < 3 indicate hand-built nodes that 
;; have different pin assignemnts than the PCB nodes. I started using 10++ for
;; the version 0.5 PCB.
[common_env_data]
build_flags =
    -D VERSION=1.0
    -D NODE_ADDRESS=5
    -D FREQUENCY=915.0
    -D TIME_REQUEST_SAMPLE_PERIOD=24
    -D STANDBY_INTERVAL_S=29

lib_deps_builtin = 
    Wire
    SPI
   
lib_deps_external = 
    ; https://github.com/jgallagher59701/soil_sensor_common.git
    mikem/RadioHead@^1.120
    ; adafruit/Adafruit BusIO@^1.10.1
    ; adafruit/Adafruit SHT31 Library@^2.0.0
    arduino-libraries/RTCZero@^1.6.0

    
[env:zeroUSB]
platform = atmelsam
board = zeroUSB
framework = arduino

;; Build options
build_flags =
    ${common_env_data.build_flags}
 
;; Dependencies
lib_deps =
    ${common_env_data.lib_deps_builtin}
    ${common_env_data.lib_deps_external}

;; Serial Monitor options
upload_speed = 115200
monitor_speed = 115200

[env:debugZeroUSB]
platform = atmelsam
board = zeroUSB
framework = arduino

build_type = debug
;; debug_build_flags = -O0 -ggdb3 -g3
;; the above line causes: .../.platformio/packages/framework-arduino-samd/
;;   cores/arduino/HardwareSerial.h:67: 
;;   undefined reference to `vtable for HardwareSerial'    
debug_init_break = tbreak loop
debug_tool = jlink
upload_protocol = jlink

;; Build options
build_flags =
    ${common_env_data.build_flags}
 
;; Dependencies
lib_deps =
    ${common_env_data.lib_deps_builtin}
    ${common_env_data.lib_deps_external}

[env:native]
platform = native
build_flags =
test_filter = native_*
lib_ldf_mode = deep
;; To use this, must add the UNIT_TEST guard around setup() and loop()
test_build_src = yes
